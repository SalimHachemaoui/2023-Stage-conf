input {
  jdbc {
    jdbc_connection_string => "jdbc:mysql://127.0.0.1:3318/wordpress"
    jdbc_driver_library => "/home/mysql-connector-j-8.1.0/mysql-connector-j-8.1.0.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    jdbc_user => "uwp"
    jdbc_password => "DjagEFlmqh2451!k%sdrf"
    statement =>"SELECT * FROM parene_resources, parene_resources_lom as lom where parene_resources.parene_resource_id = lom.parene_resource_lom_id limit 100 offset 7001000"
    #schedule => "*/5 * * * * *"
    use_column_value => true
    tracking_column => "parene_resource_id"
  }
}
filter {
  mutate {
    #add_field => { "id_document" => "DOC-%{parene_resource_id}"}
    #copy => { "pr_resource_title" => "pr_resource_title_text" }
    copy => { "parene_resource_id" => "[@metadata][_parene_resource_id]" }
    copy => { "pr_resource_keyword" => "pr_resource_keyword_text" }
    remove_field => [ "@timestamp", "@version", "unix_ts_in_secs"]
  }

   ruby {
    code => '
				json_fields = [
					#Ressources
                    "lom_1_1_identifier", 
					"lom_1_2_title",
                    "lom_1_3_language",
					"lom_1_5_keyword",
					"lom_1_9_documenttype",
					"lom_2_3_contribute",
					"lom_4_3_location",
					"lom_5_6_context",

					"lom_1_4_description",
					"lom_1_6_coverage",
					"lom_1_7_structure",
					"lom_1_8_aggregationlevel",
					"lom_1_10_generalresourcetype",
					"lom_2_1_version",
					"lom_2_2_status",
					"lom_3_1_identifier",
					"lom_3_2_contribute",
					"lom_3_3_metadataschema",
					"lom_3_4_language",
					"lom_4_1_format",
					"lom_4_4_requirement",
					"lom_4_5_installationremarks",
					"lom_4_6_otherPlatformrequirements",
					"lom_5_1_activitetype",
					"lom_5_2_learningresourcetype",
					"lom_5_5_intendedendyserrole",
					"lom_5_7_typicalagerange",
					"lom_5_8_difficulty",
					"lom_5_10_description",
					"lom_5_11_language",
					"lom_5_12_activity",
					"lom_5_13_credit",
					"lom_5_14_place",
					"lom_5_15_educationalmethod",
					"lom_5_16_tool",
					"lom_6_1_cost",
					"lom_6_2_copyrightandotherrestrictions",
					"lom_6_3_description",
					"lom_7_relation",
					"lom_8_annotation",
					"lom_9_classification"
				]


					json_fields.each do |field|
							field_value = event.get(field)
							if field_value.nil? || field_value == "null"
									event.remove(field)
									next
							end
							if field_value.is_a?(String) && field_value.start_with?("\"") && field_value.end_with?("\"")
									field_value = field_value.delete_prefix("\"").delete_suffix("\"")
							end
							if !field_value.is_a?(Hash) && !field_value.is_a?(Array)
									begin
											parsed_field = JSON.parse(field_value)
											if (parsed_field.is_a?(Hash) || parsed_field.is_a?(Array))
													event.set(field, parsed_field)
											else
													event.remove(field)
											end
									rescue JSON::ParserError => e
											event.remove(field)
									end
							end
					end
'
  }
}


output {
  elasticsearch {
    hosts => ["localhost:9200"]
    user => "elastic"
    password => "O_r5iYz*Z9vLtVMbY7yi"
    index => "ressource_index"
    document_id => "%{parene_resource_id}"
    #pipeline => "elser-ressource"

  }
}
